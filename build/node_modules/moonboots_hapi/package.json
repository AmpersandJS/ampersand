{
  "author": {
    "name": "Michael Garvin",
    "email": "gar@comrade.us"
  },
  "contributors": [
    {
      "name": "Henrik Joreteg",
      "email": "henrik@andyet.net"
    }
  ],
  "name": "moonboots_hapi",
  "description": "Moonboots plugin that allows it to serve files using a hapi server",
  "version": "1.3.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/wraithgar/moonboots-hapi"
  },
  "bugs": {
    "url": "https://github.com/wraithgar/moonboots-hapi/issues",
    "email": "gar@comrade.us"
  },
  "main": "index.js",
  "dependencies": {
    "async": "~0.2.x",
    "moonboots": "~1.2.x"
  },
  "devDependencies": {
    "hapi": "2.x.x",
    "nodeunit": "0.8.x",
    "precommit-hook": "0.3.x"
  },
  "scripts": {
    "test": "NODE_ENV=test ./test.js",
    "start": "node server.js"
  },
  "license": "MIT",
  "readme": "# moonboots_hapi\n\nMoonboots plugin that allows it to serve files using a hapi server.\nBe sure to use hapi 2.x (won't work on 1.x, see legacy branch for 1.x)\n\n## How to use:\n\nExactly like you would expect, except it's a plugin now (which means it\nregisters the catchall route itself).  Also you don't pass in a server\nparameter.\n\n```js\nvar Hapi = require('hapi');\n\nvar moonboots_config = {\n    main: __dirname + '/sample/app/app.js',\n    developmentMode: false,\n    libraries: [\n        __dirname + '/sample/libraries/jquery.js'\n    ],\n    stylesheets: [\n        __dirname + '/styles.css'\n    ]\n};\n\nvar server = new Hapi.Server();\n\nserver.pack.require({moonboots_hapi: moonboots_config}, function (er) {\n    server.start();\n});\n```\n\n## Additional options\n\nIf your app has something like auth you can pass in a hapi parameter to\nthe moonboots config and it will be added to the _config_ portion of the\nclient app request handler\n\nThe app by default will serve on all requests unless you pass in an\n_appPath_ option\n\njs and css paths will default to _appPath_ if it is defined, and will\ndefault to _app.js_ and _app.css_ respectively otherwise.\n\n```js\nvar Hapi = require('hapi');\nvar HapiSession = require('hapi-session');\n\nvar moonboots_config = {\n    main: __dirname + '/sample/app/app.js',\n    developmentMode: false,\n    libraries: [\n        __dirname + '/sample/libraries/jquery.js'\n    ],\n    stylesheets: [\n        __dirname + '/styles.css'\n    ],\n    hapi: {\n        auth: 'session',\n    },\n    appPath: '/app'\n};\n\nvar server = new Hapi.Server();\nserver.route({\n    method: 'get',\n    path: '/',\n    handler: function (request, reply) {\n        reply().redirect('/app');\n    }\n});\nserver.auth('session', {\n    implementation: new HapiSession(server, session_options)\n});\n\nserver.pack.require({moonboots_hapi: moonboots_config}, function (err) {\n    server.start();\n});\n```\n\n## Multiple mooonboots on one server\n\nYou can register multiple moonboots apps for a single hapi server like so:\n\n1. Pass in an array of moonboots configs instead of a single config.\n2. Make sure that each config provides unique `appPath` or hapi will complain that the paths conflict.\n\nExample of registering multiple apps:\n\n```js\nserver.pack.require({moonboots_hapi: [moonboots_config1, moonboots_config2]}, function (er) {\n    server.start();\n});\n```\n\n## Helpers\n\nThere are currently two methods exposed from the plugin\n\n```js\nserver.plugins['moonboots_hapi].getMoonbootsConfigs(function (configs) {\n    console.log(configs); //Will be all moonboots configs\n});\nserver.plugins['moonboots_hapi].getMoonbootsApp(0, function (config) {\n    console.log(config); //Will be the first moonboots config\n});\n```\n\n## Test\n\nRun `npm test`\n\n## Sample\n\nRun `npm start` and make sure you have a grey (#ccc) background and the\n\"Woo! View source to see what rendered me\" message in your window.\n\n#License\n\nMIT\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/wraithgar/moonboots-hapi",
  "_id": "moonboots_hapi@1.3.2",
  "dist": {
    "shasum": "a27e67447ad398ee01c8ea0ff2b4b46272230cfa"
  },
  "_from": "moonboots_hapi@1.x.x",
  "_resolved": "http://registry.npmjs.org/moonboots_hapi/-/moonboots_hapi-1.3.2.tgz"
}
