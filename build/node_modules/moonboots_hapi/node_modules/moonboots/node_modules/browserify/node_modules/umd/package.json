{
  "name": "umd",
  "version": "1.1.1",
  "description": "Universal Module Definition for use in automated build systems",
  "main": "index.js",
  "directories": {
    "example": "examples"
  },
  "dependencies": {
    "rfile": "~1.0.0",
    "ruglify": "~1.0.0",
    "through": "~2.3.1",
    "uglify-js": "~2.2.5"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/umd.git"
  },
  "author": {
    "name": "ForbesLindesay"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "7f34f679e59a5051e6d4fe7e6be9657a440bbc86",
  "readme": "<img src=\"http://i.imgur.com/ypw29XY.png\" align=\"right\"/>\r\n# umd\r\n\r\nUniversal Module Definition for use in automated build systems\r\n\r\n## Source Format\r\n\r\nIn order for the UMD wrapper to work the source code for your module should `return` the export, e.g.\r\n\r\n```javascript\r\nfunction method() {\r\n  //code\r\n}\r\nmethod.helper = function () {\r\n  //code\r\n}\r\nreturn method;\r\n```\r\n\r\nFor examples, see the examples directory.  The CommonJS module format is also supported by passing true as the second argument to methods.\r\n\r\n## API\r\n\r\n### umd(name, [commonJS = false], [source])\r\n\r\n  The `name` should the the name of the module.  Use a string like name, all lower case with hyphens instead of spaces.\r\n\r\n  If CommonJS is `true` then it will accept CommonJS source instead of source code which `return`s the module.\r\n\r\n  If `source` is provided and is a string, then it is wrapped in umd and returned as a string.  If it is not provided, a duplex stream is returned which wraps the modules (see examples/build.js).\r\n\r\n  Both commonJS and source are optional and can be provided in either order.\r\n\r\n### umd.prelude(module, [commonJS = false])\r\n\r\n  return the text which will be inserted before a module.\r\n\r\n### umd.postlude(module, [commonJS = false])\r\n\r\n  return the text which will be inserted after a module.\r\n\r\n## License\r\n\r\n  MIT\r\n\r\n![viewcount](https://viewcount.jepso.com/count/ForbesLindesay/umd.png)\r\n",
  "bugs": {
    "url": "https://github.com/ForbesLindesay/umd/issues"
  },
  "homepage": "https://github.com/ForbesLindesay/umd",
  "_id": "umd@1.1.1",
  "_from": "umd@~1.1.0"
}
