{
  "name": "concat-stream",
  "description": "writable stream that concatenates strings or binary data and calls a callback with the result",
  "tags": [
    "stream",
    "simple",
    "util",
    "utility"
  ],
  "version": "1.0.1",
  "author": {
    "name": "Max Ogden",
    "email": "max@maxogden.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/maxogden/node-concat-stream.git"
  },
  "bugs": {
    "url": "http://github.com/maxogden/node-concat-stream/issues"
  },
  "engines": [
    "node >= 0.8.0"
  ],
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "license": "BSD",
  "dependencies": {
    "bops": "0.0.6"
  },
  "readme": "# concat-stream\n\n```sh\n$ npm install concat-stream\n```\n\nthen\n\n```js\nvar concat = require('concat-stream')\nvar fs = require('fs')\n    \nvar read = fs.createReadStream('readme.md')\nvar write = concat(function(data) {})\n    \nread.pipe(write)\n```\n\nworks with arrays too!\n\n```js\nvar write = concat(function(data) {})\nwrite.write([1,2,3])\nwrite.write([4,5,6])\nwrite.end()\n// data will be [1,2,3,4,5,6] in the above callback\n```\n\nworks with buffers too! can't believe the deals!\n\n```js\nvar write = concat(function(data) {})\nwrite.write(new Buffer('hello '))\nwrite.write(new Buffer('world'))\nwrite.end()\n// data will be a buffer that toString()s to 'hello world' in the above callback\n```    \n\nMIT LICENSE",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/maxogden/node-concat-stream",
  "_id": "concat-stream@1.0.1",
  "_from": "concat-stream@~1.0.0"
}
