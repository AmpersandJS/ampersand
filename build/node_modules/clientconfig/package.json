{
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "name": "clientconfig",
  "description": "Simple way to pass config items from server to client",
  "version": "0.0.4",
  "tags": [
    "browser",
    "config"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/henrikjoreteg/clientconfig.git"
  },
  "dependencies": {
    "cookie-getter": "0.0.2"
  },
  "devDependencies": {
    "precommit-hook": "0.3.4",
    "browserify": "2.18.1"
  },
  "main": "./clientconfig.js",
  "readme": "# clientconfig\n\nSuper simple mechanism for passing config items, such as API connection URLs, debug modes, etc from the server to client.\n\nThis is handy for apps built as single page apps where you're sending a pre-built js application to the client but still want to be able to pass it configuration information.\n\nThis is a very simple client side module for [browserify](https://github.com/substack/node-browserify). For more info on the approaches used here check out [humanjavascript.com](http://humanjavascript.com).\n\nIf you want to use it as a standalone, or with AMD etc. You can use `clientconfig.bundle.js`. It has no dependencies.\n\nSince we're using cookies, here are some pertinent warnings as so aptly put by @lauriro [here](https://github.com/litejs/browser-cookie-lite#notes):\n\n>Unless sent over a secure channel (such as HTTPS), the information in cookies is transmitted in the clear text.\n>\n>All sensitive information conveyed in these headers is exposed to an eavesdropper.\n>A malicious intermediary could alter the headers as they travel in either direction, with unpredictable results.\n>A malicious client could alter the Cookie header before transmission, with unpredictable results.\n\nIn short, don't send sensitive info this way unless you're on https.\n\n## How does it work?\n\nClientconfig simply looks for a cookie named `config` parses it at JSON and immediately wipes it out to avoid burdening subsequent requests with that extra overhead.\n\n## How do I use it?\n\nOn the serverside when serving up your reqeust set a cookie containing the values you'd like to pass to the client in JSON.  \n\nIf you're using node.js, express and `getconfig` it'd work like this:\n\nsample config file:\n\n```json\n{\n    \"client\": {\n        \"apiConnectionUrl\": \"https://dev.api.com\",\n        \"debugMode\": true,\n        \"enviroment\": \"dev\"\n    },\n    \"otherServerConfigItems\": {\n        \"dbpasswords\": \"etc\"\n    }\n}\n```\n\nsample server:\n\n```js\nvar app = require('express')(),\n    config = require('getconfig');\n\n// our sample request handler\napp.get('/app', function (req, res) {\n    // here we set a cookie called \"config\" to a JSON encoded settings object\n    res.cookie('config', JSON.stringify(config.client));\n    // then render the html and respond\n    res.render('app');\n});\n\napp.listen(80);\n```\n\nsample client usage:\n\n```js\nvar config = require('clientconfig');\n\nconsole.log(config.apiConnectionUrl); // prints out connection url from server config JSON file\n\n```\n\n## Installing\n\n```\nnpm i clientconfig\n```\n\nAdd it to your clientmodules or user browserify to include it in your app. voila!\n\n\n## Feedback\n\nIf you dig it, follow [@HenrikJoreteg](http://twitter.com/henrikjoreteg) on the twitterwebs. If not, file issues or send pull requests :)\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/henrikjoreteg/clientconfig/issues"
  },
  "homepage": "https://github.com/henrikjoreteg/clientconfig",
  "_id": "clientconfig@0.0.4",
  "dist": {
    "shasum": "f0b444528631d819b35dc7685df9fcdb98d79684"
  },
  "_from": "clientconfig@0.0.4",
  "_resolved": "http://registry.npmjs.org/clientconfig/-/clientconfig-0.0.4.tgz"
}
