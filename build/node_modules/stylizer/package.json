{
  "name": "stylizer",
  "version": "0.3.1",
  "description": "``` npm install stylizer --save ```",
  "main": "stylizer.js",
  "scripts": {
    "test": "node test/test.js"
  },
  "author": {
    "name": "Philip Roberts"
  },
  "license": "MIT",
  "dependencies": {
    "stylus": "~0.41.1",
    "parent-require": "~1.0.0",
    "cssesc": "~0.1.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/latentflip/stylizer.git"
  },
  "devDependencies": {
    "async": "~0.2.9",
    "nib": "~1.0.1"
  },
  "readme": "### Installation\n\n```\nnpm install stylizer --save\n```\n\n### Usage:\n\n```javascript\nvar stylizer = require('stylizer');\n\nstylizer({\n    infile: '/path/to/infile.styl',      // required, input styl file to build\n    outfile: '/path/to/outfile.css',     // optional, output css file, defaults to infile with .css extension\n    plugins: ['nib'],                    // optional, array of stylus compatible plugin module names, default: []\n    development: true                    // optional, whether to run in development mode, default: false\n}, function (err) {                      // required, callback to run when built\n    console.log('Stylus css written');\n});\n```\n\n\n### With moonboots\n\n```javascript\nvar templatizer = require('templatizer');\nvar librariesDir = __dirname + '/libraries';\nvar stylesheetsDir = __dirname + '/public/css';\nvar stylizer = require('stylizer');\n\nvar moonbootsConfig;\n\nmoonbootsConfig = {\n\n    //...\n\n    stylesheetsDir: stylesheetsDir,\n    stylesheets: [\n        stylesheetsDir + '/app.css'\n    ],\n\n    beforeBuildCSS: function (done) {\n        if (config.isDev) {\n            stylizer({\n                infile: stylesheetsDir + '/app.styl',\n                outfile: stylesheetsDir + '/app.css',\n                plugins: ['nib'],\n                development: true\n            }, function (err) {\n                if (err) return console.log(err);\n                console.log('CSS written');\n            }\n        }\n    },\n\n    // ...\n};\n```\n\n### Development mode\n\nEnabling development mode will:\n\n* Not propagate exceptions, to keep your dev server running.\n* Create a css file which, on a stylus build failure, hides your app body and replaces it with something like this to help you spot stylus errors easily:\n\n![](https://i.cloudup.com/zAbnCO0dNt-3000x3000.png)\n\n\n## Plugins\n\nStylizer supports stylus plugins like nib. To include them, list their module names in the plugins option.\n\nYou can write your own plugins. Just create a module, which exports a single function to be called by stylus' [`.use` method](http://learnboost.github.io/stylus/docs/js.html#usefn). See [nib](https://github.com/visionmedia/nib/blob/master/lib/nib.js#L50) for an example.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/latentflip/stylizer/issues"
  },
  "homepage": "https://github.com/latentflip/stylizer",
  "_id": "stylizer@0.3.1",
  "dist": {
    "shasum": "2ed32d8c2972ba6e802265b06e669b2d8df08f7b"
  },
  "_from": "stylizer@0.3.1",
  "_resolved": "http://registry.npmjs.org/stylizer/-/stylizer-0.3.1.tgz"
}
